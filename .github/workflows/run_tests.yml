name: Tests

on:
  pull_request:
    branches:
      - master
    types: [opened, synchronize]
    paths-ignore:
      - '*.md'
  workflow_dispatch:

env:
  GO111MODULE: "on"

jobs:
  test_cover:
    name: Coverage
    runs-on: ubuntu-22.04

    env:
      CGO_ENABLED: 0
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Write coverage profile
        run: go test -v ./... -coverprofile=./coverage.txt -covermode=atomic

      - name: Upload coverage results to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: false
          path_to_write_report: ./coverage.txt
          verbose: true

  tests:
    name: Go
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go_versions: [ '1.20', '1.21', '1.22' ]
        os: [ubuntu-22.04, windows-2022, macos-12, macos-14]
        exclude:
          # Only latest Go version for Windows and MacOS.
          - os: windows-2022
            go_versions: '1.20'
          - os: windows-2022
            go_versions: '1.21'
          - os: macos-12
            go_versions: '1.20'
          - os: macos-12
            go_versions: '1.21'
          - os: macos-14
            go_versions: '1.20'
          - os: macos-14
            go_versions: '1.21'
          # Exclude latest Go version for Ubuntu as Coverage uses it.
          - os: ubuntu-20.04
            go_versions: '1.22'
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '${{ matrix.go_versions }}'

      - name: Run tests
        run: go test -v -race ./...
